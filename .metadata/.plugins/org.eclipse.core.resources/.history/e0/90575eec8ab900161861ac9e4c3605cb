# Makefile.in generated by automake 1.11.6 from Makefile.am.
# aeabi/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





VPATH = /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/newlib/libc/aeabi
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/newlib
pkgincludedir = $(includedir)/newlib
pkglibdir = $(libdir)/newlib
pkglibexecdir = $(libexecdir)/newlib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-cygwin
host_triplet = nios2-unknown-elf
DIST_COMMON = $(srcdir)/../../Makefile.shared $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am
subdir = aeabi
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \
	$(top_srcdir)/../../ltoptions.m4 \
	$(top_srcdir)/../../ltsugar.m4 \
	$(top_srcdir)/../../ltversion.m4 \
	$(top_srcdir)/../../lt~obsolete.m4 \
	$(top_srcdir)/../acinclude.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
lib_a_AR = $(AR) $(ARFLAGS)
lib_a_LIBADD =
am__objects_1 = lib_a-aeabi_atexit.$(OBJEXT) \
	lib_a-aeabi_memclr.$(OBJEXT) lib_a-aeabi_memcpy.$(OBJEXT) \
	lib_a-aeabi_memmove.$(OBJEXT) lib_a-aeabi_memset.$(OBJEXT) \
	lib_a-clibabi_assert.$(OBJEXT) lib_a-clibabi_ctype.$(OBJEXT) \
	lib_a-clibabi_errno.$(OBJEXT) lib_a-clibabi_limits.$(OBJEXT) \
	lib_a-clibabi_locale.$(OBJEXT) lib_a-clibabi_math.$(OBJEXT) \
	lib_a-clibabi_setjmp.$(OBJEXT) lib_a-clibabi_signal.$(OBJEXT) \
	lib_a-clibabi_signal_fns.$(OBJEXT) \
	lib_a-clibabi_stdio.$(OBJEXT) lib_a-clibabi_stdlib.$(OBJEXT) \
	lib_a-clibabi_time.$(OBJEXT)
am_lib_a_OBJECTS = $(am__objects_1)
lib_a_OBJECTS = $(am_lib_a_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libaeabi_la_LIBADD =
am__objects_2 = aeabi_atexit.lo aeabi_memclr.lo aeabi_memcpy.lo \
	aeabi_memmove.lo aeabi_memset.lo clibabi_assert.lo \
	clibabi_ctype.lo clibabi_errno.lo clibabi_limits.lo \
	clibabi_locale.lo clibabi_math.lo clibabi_setjmp.lo \
	clibabi_signal.lo clibabi_signal_fns.lo clibabi_stdio.lo \
	clibabi_stdlib.lo clibabi_time.lo
#am_libaeabi_la_OBJECTS = $(am__objects_2)
libaeabi_la_OBJECTS = $(am_libaeabi_la_OBJECTS)
libaeabi_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libaeabi_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libaeabi_la_rpath =
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp =
am__depfiles_maybe =
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(lib_a_SOURCES) $(libaeabi_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(noinst_DATA)
ETAGS = etags
CTAGS = ctags
ACLOCAL = ${SHELL} /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/build-newlib-stage-wrapper nios2-elf-ar
AS = /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/build-newlib-stage-wrapper nios2-elf-as
AUTOCONF = ${SHELL} /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/missing --run autoconf
AUTOHEADER = ${SHELL} /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/missing --run autoheader
AUTOMAKE = ${SHELL} /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/missing --run automake-1.11
AWK = gawk
CC = /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/build-newlib-stage-wrapper nios2-elf-gcc -B/cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/newlib/ -isystem /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/newlib/targ-include -isystem /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/newlib/libc/include -B/cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/libgloss/nios2 -L/cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/libgloss/libnosys -L/cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/libgloss/nios2   
CCAS = /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/build-newlib-stage-wrapper nios2-elf-gcc -B/cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/newlib/ -isystem /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/newlib/targ-include -isystem /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/newlib/libc/include -B/cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/libgloss/nios2 -L/cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/libgloss/libnosys -L/cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/libgloss/nios2   
CCASFLAGS = -g -Os -ffunction-sections -fdata-sections -mno-gpopt
CCDEPMODE = depmode=gcc3
CFLAGS = -g -Os -ffunction-sections -fdata-sections -mno-gpopt
CPP = 
CPPFLAGS = 
CRT0 = 
CYGPATH_W = cygpath -w
DEFS = -DPACKAGE_NAME=\"newlib\" -DPACKAGE_TARNAME=\"newlib\" -DPACKAGE_VERSION=\"2.2.0\" -DPACKAGE_STRING=\"newlib\ 2.2.0\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\"
DEPDIR = .deps
DLLTOOL = nios2-elf-dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = 
EXEEXT = 
FGREP = 
GREP = 
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = nios2-elf-ld
LDFLAGS = 
LIBC_AEABI_LIB = 
LIBC_EXTRA_DEF = 
LIBC_EXTRA_LIB = 
LIBC_MACHINE_LIB = machine/lib.a
LIBC_POSIX_DEF = 
LIBC_POSIX_LIB = 
LIBC_SIGNAL_DEF = signal/stmp-def
LIBC_SIGNAL_LIB = signal/lib.a
LIBC_STDIO64_DEF = 
LIBC_STDIO64_LIB = 
LIBC_STDIO_DEF = stdio/stmp-def
LIBC_STDIO_LIB = stdio/lib.a
LIBC_SYSCALL_LIB = 
LIBC_SYS_LIB = 
LIBC_UNIX_LIB = 
LIBC_XDR_DEF = 
LIBC_XDR_LIB = 
LIBOBJS = 
LIBS = 
LIBTOOL = 
LIPO = nios2-elf-lipo
LN_S = 
LTLIBOBJS = 
MAINT = #
MAKEINFO = makeinfo
MKDIR_P = /bin/mkdir -p
NEWLIB_CFLAGS =  -O2 -DHAVE_GETTIMEOFDAY -DWANT_SMALL_STDIO -DHAVE_RENAME -DWANT_PRINTF_LONG_LONG -D_REENT_SMALL -DPREFER_SIZE_OVER_SPEED -DNO_FLOATING_POINT -DSMALL_MEMORY  -DMALLOC_LOCK_PROVIDED -DMALLOC_LOCK=__malloc_lock -DMALLOC_UNLOCK=__malloc_unlock -DENV_LOCK_PROVIDED -DENV_LOCK=__env_lock -DENV_UNLOCK=__env_unlock -DHAVE_RENAME -DMISSING_SYSCALL_NAMES -fno-builtin
NM = nios2-elf-nm
NMEDIT = 
NO_INCLUDE_LIST =  rpc/types.h rpc/xdr.h
OBJDUMP = nios2-elf-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = newlib
PACKAGE_BUGREPORT = 
PACKAGE_NAME = newlib
PACKAGE_STRING = newlib 2.2.0
PACKAGE_TARNAME = newlib
PACKAGE_URL = 
PACKAGE_VERSION = 2.2.0
PATH_SEPARATOR = :
RANLIB = /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/build-newlib-stage-wrapper nios2-elf-ranlib
READELF = nios2-elf-readelf
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = nios2-elf-strip
VERSION = 2.2.0
abs_builddir = /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/newlib/libc/aeabi
abs_srcdir = /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/newlib/libc/aeabi
abs_top_builddir = /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib-build-tmp/smallc/nios2-elf/newlib/libc
abs_top_srcdir = /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/newlib/libc
ac_ct_CC = 
ac_ct_DUMPBIN = 
aext = a
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-cygwin
build_alias = x86_64-unknown-cygwin
build_cpu = x86_64
build_os = cygwin
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
extra_dir = 
host = nios2-unknown-elf
host_alias = nios2-elf
host_cpu = nios2
host_os = elf
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libm_machine_dir = 
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lpfx = lib_a-
machine_dir = nios2
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
newlib_basedir = /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/newlib/libc/..
oext = o
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /cygdrive/c/neural_network_fpga/software/neural_bsp/newlib
program_transform_name = s&^&nios2-elf-&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/newlib/libc/aeabi
subdirs =  machine sys
sys_dir = 
sysconfdir = ${prefix}/etc
target_alias = nios2-elf
top_build_prefix = ../
top_builddir = ..
top_srcdir = /cygdrive/c/altera/16.0/nios2eds/bin/gnu/src/newlib-2.2/newlib/libc
AUTOMAKE_OPTIONS = cygnus
INCLUDES = $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)
LIB_SOURCES = aeabi_atexit.c aeabi_memclr.c aeabi_memcpy.c \
		aeabi_memmove.c aeabi_memset.c clibabi_assert.c \
		clibabi_ctype.c clibabi_errno.c clibabi_limits.c \
		clibabi_locale.c clibabi_math.c clibabi_setjmp.c \
		clibabi_signal.c clibabi_signal_fns.S clibabi_stdio.c \
		clibabi_stdlib.c clibabi_time.c

libaeabi_la_LDFLAGS = -Xcompiler -nostdlib
#noinst_LTLIBRARIES = libaeabi.la
#libaeabi_la_SOURCES = $(LIB_SOURCES)
noinst_DATA = 
#noinst_DATA = objectlist.awk.in
noinst_LIBRARIES = lib.a
lib_a_SOURCES = $(LIB_SOURCES)
lib_a_CFLAGS = $(AM_CFLAGS)
lib_a_CCASFLAGS = $(AM_CCASFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/../../Makefile.shared $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus aeabi/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --cygnus aeabi/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../../Makefile.shared:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
lib.a: $(lib_a_OBJECTS) $(lib_a_DEPENDENCIES) $(EXTRA_lib_a_DEPENDENCIES) 
	-rm -f lib.a
	$(lib_a_AR) lib.a $(lib_a_OBJECTS) $(lib_a_LIBADD)
	$(RANLIB) lib.a

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libaeabi.la: $(libaeabi_la_OBJECTS) $(libaeabi_la_DEPENDENCIES) $(EXTRA_libaeabi_la_DEPENDENCIES) 
	$(libaeabi_la_LINK) $(am_libaeabi_la_rpath) $(libaeabi_la_OBJECTS) $(libaeabi_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.S.o:
	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
	$(LTCPPASCOMPILE) -c -o $@ $<

lib_a-clibabi_signal_fns.o: clibabi_signal_fns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CCASFLAGS) $(CCASFLAGS) -c -o lib_a-clibabi_signal_fns.o `test -f 'clibabi_signal_fns.S' || echo '$(srcdir)/'`clibabi_signal_fns.S

lib_a-clibabi_signal_fns.obj: clibabi_signal_fns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CCASFLAGS) $(CCASFLAGS) -c -o lib_a-clibabi_signal_fns.obj `if test -f 'clibabi_signal_fns.S'; then $(CYGPATH_W) 'clibabi_signal_fns.S'; else $(CYGPATH_W) '$(srcdir)/clibabi_signal_fns.S'; fi`

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

lib_a-aeabi_atexit.o: aeabi_atexit.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_atexit.o `test -f 'aeabi_atexit.c' || echo '$(srcdir)/'`aeabi_atexit.c

lib_a-aeabi_atexit.obj: aeabi_atexit.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_atexit.obj `if test -f 'aeabi_atexit.c'; then $(CYGPATH_W) 'aeabi_atexit.c'; else $(CYGPATH_W) '$(srcdir)/aeabi_atexit.c'; fi`

lib_a-aeabi_memclr.o: aeabi_memclr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_memclr.o `test -f 'aeabi_memclr.c' || echo '$(srcdir)/'`aeabi_memclr.c

lib_a-aeabi_memclr.obj: aeabi_memclr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_memclr.obj `if test -f 'aeabi_memclr.c'; then $(CYGPATH_W) 'aeabi_memclr.c'; else $(CYGPATH_W) '$(srcdir)/aeabi_memclr.c'; fi`

lib_a-aeabi_memcpy.o: aeabi_memcpy.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_memcpy.o `test -f 'aeabi_memcpy.c' || echo '$(srcdir)/'`aeabi_memcpy.c

lib_a-aeabi_memcpy.obj: aeabi_memcpy.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_memcpy.obj `if test -f 'aeabi_memcpy.c'; then $(CYGPATH_W) 'aeabi_memcpy.c'; else $(CYGPATH_W) '$(srcdir)/aeabi_memcpy.c'; fi`

lib_a-aeabi_memmove.o: aeabi_memmove.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_memmove.o `test -f 'aeabi_memmove.c' || echo '$(srcdir)/'`aeabi_memmove.c

lib_a-aeabi_memmove.obj: aeabi_memmove.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_memmove.obj `if test -f 'aeabi_memmove.c'; then $(CYGPATH_W) 'aeabi_memmove.c'; else $(CYGPATH_W) '$(srcdir)/aeabi_memmove.c'; fi`

lib_a-aeabi_memset.o: aeabi_memset.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_memset.o `test -f 'aeabi_memset.c' || echo '$(srcdir)/'`aeabi_memset.c

lib_a-aeabi_memset.obj: aeabi_memset.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-aeabi_memset.obj `if test -f 'aeabi_memset.c'; then $(CYGPATH_W) 'aeabi_memset.c'; else $(CYGPATH_W) '$(srcdir)/aeabi_memset.c'; fi`

lib_a-clibabi_assert.o: clibabi_assert.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_assert.o `test -f 'clibabi_assert.c' || echo '$(srcdir)/'`clibabi_assert.c

lib_a-clibabi_assert.obj: clibabi_assert.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_assert.obj `if test -f 'clibabi_assert.c'; then $(CYGPATH_W) 'clibabi_assert.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_assert.c'; fi`

lib_a-clibabi_ctype.o: clibabi_ctype.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_ctype.o `test -f 'clibabi_ctype.c' || echo '$(srcdir)/'`clibabi_ctype.c

lib_a-clibabi_ctype.obj: clibabi_ctype.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_ctype.obj `if test -f 'clibabi_ctype.c'; then $(CYGPATH_W) 'clibabi_ctype.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_ctype.c'; fi`

lib_a-clibabi_errno.o: clibabi_errno.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_errno.o `test -f 'clibabi_errno.c' || echo '$(srcdir)/'`clibabi_errno.c

lib_a-clibabi_errno.obj: clibabi_errno.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_errno.obj `if test -f 'clibabi_errno.c'; then $(CYGPATH_W) 'clibabi_errno.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_errno.c'; fi`

lib_a-clibabi_limits.o: clibabi_limits.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_limits.o `test -f 'clibabi_limits.c' || echo '$(srcdir)/'`clibabi_limits.c

lib_a-clibabi_limits.obj: clibabi_limits.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_limits.obj `if test -f 'clibabi_limits.c'; then $(CYGPATH_W) 'clibabi_limits.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_limits.c'; fi`

lib_a-clibabi_locale.o: clibabi_locale.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_locale.o `test -f 'clibabi_locale.c' || echo '$(srcdir)/'`clibabi_locale.c

lib_a-clibabi_locale.obj: clibabi_locale.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_locale.obj `if test -f 'clibabi_locale.c'; then $(CYGPATH_W) 'clibabi_locale.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_locale.c'; fi`

lib_a-clibabi_math.o: clibabi_math.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_math.o `test -f 'clibabi_math.c' || echo '$(srcdir)/'`clibabi_math.c

lib_a-clibabi_math.obj: clibabi_math.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_math.obj `if test -f 'clibabi_math.c'; then $(CYGPATH_W) 'clibabi_math.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_math.c'; fi`

lib_a-clibabi_setjmp.o: clibabi_setjmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_setjmp.o `test -f 'clibabi_setjmp.c' || echo '$(srcdir)/'`clibabi_setjmp.c

lib_a-clibabi_setjmp.obj: clibabi_setjmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_setjmp.obj `if test -f 'clibabi_setjmp.c'; then $(CYGPATH_W) 'clibabi_setjmp.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_setjmp.c'; fi`

lib_a-clibabi_signal.o: clibabi_signal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_signal.o `test -f 'clibabi_signal.c' || echo '$(srcdir)/'`clibabi_signal.c

lib_a-clibabi_signal.obj: clibabi_signal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_signal.obj `if test -f 'clibabi_signal.c'; then $(CYGPATH_W) 'clibabi_signal.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_signal.c'; fi`

lib_a-clibabi_stdio.o: clibabi_stdio.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_stdio.o `test -f 'clibabi_stdio.c' || echo '$(srcdir)/'`clibabi_stdio.c

lib_a-clibabi_stdio.obj: clibabi_stdio.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_stdio.obj `if test -f 'clibabi_stdio.c'; then $(CYGPATH_W) 'clibabi_stdio.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_stdio.c'; fi`

lib_a-clibabi_stdlib.o: clibabi_stdlib.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_stdlib.o `test -f 'clibabi_stdlib.c' || echo '$(srcdir)/'`clibabi_stdlib.c

lib_a-clibabi_stdlib.obj: clibabi_stdlib.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_stdlib.obj `if test -f 'clibabi_stdlib.c'; then $(CYGPATH_W) 'clibabi_stdlib.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_stdlib.c'; fi`

lib_a-clibabi_time.o: clibabi_time.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_time.o `test -f 'clibabi_time.c' || echo '$(srcdir)/'`clibabi_time.c

lib_a-clibabi_time.obj: clibabi_time.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-clibabi_time.obj `if test -f 'clibabi_time.c'; then $(CYGPATH_W) 'clibabi_time.c'; else $(CYGPATH_W) '$(srcdir)/clibabi_time.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
check-am:
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(DATA)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-noinstLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags dvi dvi-am html html-am info \
	info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am

objectlist.awk.in: $(noinst_LTLIBRARIES)
	-rm -f objectlist.awk.in
	touch objectlist.awk.in
	for i in `ls *.lo` ; \
	do \
	  echo $$i `pwd`/$$i >> objectlist.awk.in ; \
	done

# No documentation for this subdirectory.
doc:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
